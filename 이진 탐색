정렬된 리스트에 사용 되는 탐색 알고리즘

- 리스트에서 탐색범위를 절반씩 *** 좁혀가며 특정한 값을 찾을때 사용
속도가 빠르고 효율적 O(log n

1. 포인터들을 사용 LOW , MID , HIGH
Target 값이 중간값보다 작으면 중간값을 기준으로 좌측 반대면 우측을 탐색
이 과정을 타겟을 찾을때까지 반복


* 중간은 시작과 끝의 평균의 몫
* 매우 큰 탐색 범위를 찾아야 하는 경우 ,정렬한 뒤 다수의 쿼리를 날려야 하는 경우에 사용

function binarySearch(arr,target,start,end){
if(start > end) return -1 ;
let mid = parseInt((start+end)/2);
if(arr[mid] > target) return binarySearch(arr, target, start, mid - 1);
else return binarySearch(arr, target, mid +1 , end);

