몫 구하기 : parseInt(13/5) , Math.floor(13/5) , ~~(13/5)
나머지 : %
숫자판별 : .isNaN()

진수변환 : .toString(2) 하면 10진수를 2진수로, 다른 진수를 10진수로 변환하려면 parseInt(이진수값,2) 이런식

에라토스테네스의 체(소수구하기) : 
function get_primes(num) {
    const prime = [false, false, ...Array(num - 1).fill(true)];
    for (let i = 2; i * i <= num; i++) {
        if (prime[i]) { // i가 소수이면
            for (let j = i * 2; j <= num; j += i) { // i의 배수들을 제거
                prime[j] = false;
            }
        }
    }
}
유클리드 호제법(최대공약수,최소공배수) :

function solution(num1, num2) {
    const gcd = (a, b) => a % b === 0 ? b : gcd(b, a % b);
    const lcm = (a, b) => a * b / gcd(a, b);
    return [gcd(num1, num2), lcm(num1, num2)];
}
