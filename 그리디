뭔가 논리가 막막할때  한 길로 뚫는 느낌으로 푸는 방식
-> 그때그때 가장 최적의 경우를 선택하는 방식
(수학 문제에 많음)
그리드는 거의 수학 문제와 비슷하고 직접 쓰며 규칙성을 찾는게 도움이 됨

좀 직관적으로 이렇게하면 될거 같다는 방법을 선택
- 크게크게 바꿀수 있는게 있고 그거를 최대한 활용하는 방식으로

앞에서 부터 쭉 비교하는 알고리즘 -> 특정 변수에 값을 저장해놓고 계속 비교하며 업데이트 

번호가 있다면 배열에 저장해놓고 업데이트도 가능

어떻게 정렬할지 고민(정렬을 잘하면 그리디하게 풀어도 최적 해가 나올 수 있음)


완전 탐색은 너무 느림 -> DP로 속도 개선 -> 그리디로 더 빠르게 해결 가능


문자열 불러올때 trim() 쓰기

문자열에서 중간에 있는 값 삭제하고 싶을때
slice 를 두개 해서 이어 붙이기 (replace는 인덱스를 모름)

* // 기준이 두 개이면 한 개로 정렬하고 나머지 하나로 비교
