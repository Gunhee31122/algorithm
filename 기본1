1. '\n' 줄바꿈
let a = 'sdf\n123' 이렇게 되어있으면 출력할 때 sdf 하고 다음 줄에 123 skdha

2. 입력 데이터가 텍스트 파일로 주어지면 파일 시스템 모듈을 사용
let fs = require('fs');
let input = fs.readFileSync('파일명').toString().split('\n');   <- 백준 할 때는 파일명 자리에 /dev/stdin
하면 리스트로 파일은 받아옴 ( 한 줄씩)
문자열로 받기 때문에 정수로 바꾸는 경우 있음
let line = input[0].split(' '); 이것도 필요

여러 줄에 걸쳐서 데이터가 들어올때는 input[0], input[1] 이 각각 데이터
let [a,b] = input[0].split(' ').map(Number);  로 한 번에 입력값 받기


3.fs 모듈을 사용할 수 없을때 한 줄씩 입력받는 readline 모듈을 사용

const rl = require('readline').createInterface({
  input : process.stdin,
 output : process.stdout
});

let input = [];
rl.on('line', function(line) {
  input.push(line);
}).on('close', function() {
  console.log(input);
  process.exit();
});

4. (이스케이프 시퀀스)
예약어나 특수문자는 \와 함께 사용

5.(소수점 아래 특정 자리에서 반올림)
let x = 123.456
console.log(x.toFixed(2));
2째 자리까지 출력

6.(배열 초기화)
let arr = new Array(5).fill(0);

7. 수와 문자열 형 변환은
Number()
String()

8.reduce() 는 배열의 모든 원소에 대해 특정한 연산을 순차적으로 적용할 때 사용 //
reduce((accumulator, currentValue) => (반환값))
이 반환값을 accumulator 로 들어가고 최종적으로 reduce 밖으로 리턴함

9.(특정 원소 등장 여부) -> 집합 자료형 //

let mySet = new Set();

mySet.add(3); 3을 추가
mySet.delete(5); 5를 제거
mySet.size ; 자료의 크기
mySet.has(3) ; 3을 가지고 있는지
for (let item of mySet) ; 원소를 하나씩 순회

10. (변수이름)

개수 = count
중요 = main
보조 = sub
총합 = total


