1. 시간 문제는 가장 작은 단위 분이나 초로 모두 바꾸면 간단해 짐

2. 등차수열 같은 수학공식을 이용하면 더 빠르게 해결 가능함 (상수시간 걸리기 때문에)

3. 한 줄 한줄 출력할때마다 console.log를 쓰면 시간이 많이 걸림 -> 모든 줄에 대한 정보를 하나의
문자열에 담았다가 한꺼번에 출력
이걸 '\n' 과 함께 사용하면 효율이 굉장히 높음

2
34
102 를 출력해야 한다면 answer = '2\n34\n102' 이렇게 만드는 것

4. parseInt 보다 Number가 빠름 (단 내림 할때는 parseInt)

5. 아래 줄로 안 내리고 띄어쓰기 하려면
문자열로 바꾸고 + " "  이거 붙이기

6. 구조 분해 할당을 이용하여 변수 선언하기

7. 지표 변수로  found = false 만들어 놓고 조건을 만족하면 true로 바꾸기

8. map은 결과를 return하며 원래 배열은 안 바뀌는 함수, 다시 할당해야 함

9. top 을 새로 변수로 만들어서 쓰면 안 되는 이유가 선언 당시에 값을 계속 가지고 있고 업데이트가 안됨

10. 변하지 않는 모양은 그냥 하드코딩으로 선언하는게 오히려 효율적

11. 조건문 계속 돌리고 싶으면 ;;

12. 이차원 배열 만들때 []에 new Array를 push 하기

13. while(fibo[fibo.length - 1] < 1e9){
    fibo.push(fibo[fibo.length - 2] + fibo[fibo.length - 1]);
} 인덱스가 아닌 값을 조건으로 반복문을 돌릴 때

14. 
